{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _maybeBaby = require('maybe-baby');\n\nvar _maybeBaby2 = _interopRequireDefault(_maybeBaby);\n\nvar _apiCheck = require('api-check');\n\nvar _apiCheck2 = _interopRequireDefault(_apiCheck);\n\nvar _formConst = require('../config/form-const');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar FIELD = _formConst.PROPERTY.FIELD,\n    SECTION = _formConst.PROPERTY.SECTION,\n    SUBSECTION = _formConst.PROPERTY.SUBSECTION,\n    DEFINITION = _formConst.PROPERTY.DEFINITION; // Configure api-check\n\nvar validator = (0, _apiCheck2.default)({\n  output: {\n    prefix: 'FormEngine:'\n  }\n});\nvar FormApiService = {\n  __validateFieldShape: function __validateFieldShape(field) {\n    var _validator$shape;\n\n    validator.throw([validator.shape((_validator$shape = {}, _defineProperty(_validator$shape, FIELD.ID, validator.oneOfType([validator.string, validator.number])), _defineProperty(_validator$shape, FIELD.TYPE, validator.string), _defineProperty(_validator$shape, FIELD.TITLE, validator.string), _defineProperty(_validator$shape, FIELD.SUBTITLE, validator.string.optional), _defineProperty(_validator$shape, FIELD.OPTIONS, validator.array.optional), _defineProperty(_validator$shape, FIELD.FIELDS, validator.array.optional), _defineProperty(_validator$shape, FIELD.MIN, validator.number.optional), _defineProperty(_validator$shape, FIELD.MAX, validator.number.optional), _defineProperty(_validator$shape, FIELD.REQUIRED, validator.bool.optional), _defineProperty(_validator$shape, FIELD.PLACEHOLDER, validator.string.optional), _defineProperty(_validator$shape, FIELD.PATTERN, validator.string.optional), _defineProperty(_validator$shape, FIELD.SHOW_CONDITION, validator.object.optional), _validator$shape))], arguments, {\n      prefix: '[Field: ' + _getObjectIdDisplay(field) + ']'\n    });\n  },\n  __validateDefinitionShape: function __validateDefinitionShape(definition) {\n    var _validator$shape2, _validator$shape3, _validator$shape4;\n\n    validator.throw([validator.shape((_validator$shape4 = {}, _defineProperty(_validator$shape4, DEFINITION.ID, validator.string), _defineProperty(_validator$shape4, DEFINITION.TITLE, validator.string), _defineProperty(_validator$shape4, DEFINITION.FA_ICON, validator.object.optional), _defineProperty(_validator$shape4, DEFINITION.SUBTITLE, validator.string.optional), _defineProperty(_validator$shape4, DEFINITION.SECTIONS, validator.arrayOf(validator.shape((_validator$shape3 = {}, _defineProperty(_validator$shape3, SECTION.ID, validator.string), _defineProperty(_validator$shape3, SECTION.TITLE, validator.string), _defineProperty(_validator$shape3, SECTION.SUBTITLE, validator.string.optional), _defineProperty(_validator$shape3, SECTION.SORT_ORDER, validator.number.optional), _defineProperty(_validator$shape3, SECTION.SUBSECTIONS, validator.arrayOf(validator.shape((_validator$shape2 = {}, _defineProperty(_validator$shape2, SUBSECTION.ID, validator.string), _defineProperty(_validator$shape2, SUBSECTION.TITLE, validator.string), _defineProperty(_validator$shape2, SUBSECTION.SUBTITLE, validator.string.optional), _defineProperty(_validator$shape2, SUBSECTION.SORT_ORDER, validator.number.optional), _defineProperty(_validator$shape2, SUBSECTION.FIELDS, validator.arrayOf(validator.object)), _validator$shape2)).strict)), _validator$shape3)).strict)), _defineProperty(_validator$shape4, DEFINITION.DECORATORS, validator.object.optional), _validator$shape4)).strict], arguments, {\n      prefix: '[Definition: \"' + _getObjectIdDisplay(definition) + '\"]'\n    });\n  }\n};\n\nvar _getObjectIdDisplay = function _getObjectIdDisplay(field) {\n  return _maybeBaby2.default.of(field).prop(FIELD.ID).orElse('[No Id]').join();\n};\n\nexports.default = FormApiService;","map":null,"metadata":{},"sourceType":"script"}