{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/src/Header.js\";\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nvar defaultProps = {\n  colors: [{\n    value: 'all',\n    label: 'All'\n  }, {\n    value: 'red',\n    label: 'Red'\n  }, {\n    value: 'blue',\n    label: 'Blue'\n  }]\n};\n\nfunction getSelected() {\n  var colours = this.props.colours;\n  var selectedColour = this.props.params.colour; // Find the option matching the route param, or\n  // return a default value when the colour is not found\n\n  return find(colours, {\n    value: selectedColour\n  }) || colours[0];\n}\n\nvar Header = function Header() {\n  return React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    options: _this.props.colors,\n    value: selectedOption,\n    onChange: _this.handleSelect.bind(_this),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"You selected: \", selectedOption.label)), React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Home\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/entityDesigner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"entityDesigner\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/formDesigner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"formDesigner\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/workflowDesigner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"workflowDesigner\")))));\n};\n\nexport default Header;","map":{"version":3,"sources":["/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/src/Header.js"],"names":["React","Link","defaultProps","colors","value","label","getSelected","colours","props","selectedColour","params","colour","find","Header","selectedOption","handleSelect","bind"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,CACJ;AAACC,IAAAA,KAAK,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GADI,EAEJ;AAACD,IAAAA,KAAK,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAFI,EAGJ;AAACD,IAAAA,KAAK,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAHI;AADO,CAAnB;;AAQA,SAASC,WAAT,GAAuB;AACnB,MAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAA3B;AACA,MAAME,cAAc,GAAG,KAAKD,KAAL,CAAWE,MAAX,CAAkBC,MAAzC,CAFmB,CAInB;AACA;;AACA,SAAOC,IAAI,CAACL,OAAD,EAAU;AAAEH,IAAAA,KAAK,EAAEK;AAAT,GAAV,CAAJ,IAA4CF,OAAO,CAAC,CAAD,CAA1D;AACH;;AAED,IAAMM,MAAM,GAAG,SAATA,MAAS;AAAA,SACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,oBAAC,QAAD;AACI,IAAA,OAAO,EAAG,KAAI,CAACL,KAAL,CAAWL,MADzB;AAEI,IAAA,KAAK,EAAGW,cAFZ;AAGI,IAAA,QAAQ,EAAG,KAAI,CAACC,YAAL,CAAkBC,IAAlB,CAAuB,KAAvB,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,EAMK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAmBF,cAAc,CAACT,KAAlC,CANL,CAJT,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAJ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,mBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAJ,CAJF,CADF,CAbF,CADa;AAAA,CAAf;;AAyBA,eAAeQ,MAAf","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nlet defaultProps = {\n    colors: [\n        {value: 'all', label: 'All'},\n        {value: 'red', label: 'Red'},\n        {value: 'blue', label: 'Blue'}\n    ]\n}\n\nfunction getSelected() {\n    const colours = this.props.colours\n    const selectedColour = this.props.params.colour\n\n    // Find the option matching the route param, or\n    // return a default value when the colour is not found\n    return find(colours, { value: selectedColour }) || colours[0];\n}\n\nconst Header = () => (\n  <header>\n\n\n\n           <div>\n                <Dropdown \n                    options={ this.props.colors }\n                    value={ selectedOption } \n                    onChange={ this.handleSelect.bind(this) } \n                />\n                <p>You selected: { selectedOption.label }</p>\n            </div>\n\n    <nav>\n      <ul>\n        <li><Link to='/'>Home</Link></li>\n        <li><Link to='/entityDesigner'>entityDesigner</Link></li>\n        <li><Link to='/formDesigner'>formDesigner</Link></li>\n        <li><Link to='/workflowDesigner'>workflowDesigner</Link></li>\n      </ul>\n    </nav>\n  </header>\n)\n\nexport default Header"]},"metadata":{},"sourceType":"module"}