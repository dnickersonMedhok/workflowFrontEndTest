{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _store = require('./stores/store');\n\nvar _store2 = _interopRequireDefault(_store);\n\nvar _formElementsEdit = require('./form-elements-edit');\n\nvar _formElementsEdit2 = _interopRequireDefault(_formElementsEdit);\n\nvar _sortableFormElements = require('./sortable-form-elements');\n\nvar SortableFormElements = _interopRequireWildcard(_sortableFormElements);\n\nvar _immutabilityHelper = require('immutability-helper');\n\nvar _immutabilityHelper2 = _interopRequireDefault(_immutabilityHelper);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\r\n  * <Preview />\r\n  */\n\n\nvar PlaceHolder = SortableFormElements.PlaceHolder;\n\nvar Preview = function (_React$Component) {\n  _inherits(Preview, _React$Component);\n\n  function Preview(props) {\n    _classCallCheck(this, Preview);\n\n    var _this = _possibleConstructorReturn(this, (Preview.__proto__ || Object.getPrototypeOf(Preview)).call(this, props));\n\n    var onLoad = props.onLoad,\n        onPost = props.onPost;\n\n    _store2.default.setExternalHandler(onLoad, onPost);\n\n    _this.state = {\n      data: [],\n      answer_data: {}\n    };\n    var loadData = _this.props.url ? _this.props.url : _this.props.data ? _this.props.data : [];\n    var saveUrl = _this.props.saveUrl ? _this.props.saveUrl : '';\n\n    _store2.default.dispatch('load', {\n      loadData: loadData,\n      saveUrl: saveUrl\n    });\n\n    var update = _this._onChange.bind(_this);\n\n    _store2.default.subscribe(function (state) {\n      return update(state.data);\n    });\n\n    _this.moveCard = _this.moveCard.bind(_this);\n    _this.insertCard = _this.insertCard.bind(_this);\n    return _this;\n  }\n\n  _createClass(Preview, [{\n    key: '_setValue',\n    value: function _setValue(text) {\n      return text.replace(/[^A-Z0-9]+/ig, \"_\").toLowerCase();\n    }\n  }, {\n    key: 'updateElement',\n    value: function updateElement(element) {\n      var data = this.state.data;\n      var found = false;\n\n      for (var i = 0, len = data.length; i < len; i++) {\n        if (element.id === data[i].id) {\n          data[i] = element;\n          found = true;\n          break;\n        }\n      }\n\n      if (found) {\n        _store2.default.dispatch('updateOrder', data);\n      }\n    }\n  }, {\n    key: '_onChange',\n    value: function _onChange(data) {\n      var _this2 = this;\n\n      var answer_data = {};\n      data.forEach(function (item) {\n        if (item && item.readOnly && _this2.props.variables[item.variableKey]) {\n          answer_data[item.field_name] = _this2.props.variables[item.variableKey];\n        }\n      });\n      this.setState({\n        data: data,\n        answer_data: answer_data\n      });\n    }\n  }, {\n    key: '_onDestroy',\n    value: function _onDestroy(item) {\n      _store2.default.dispatch('delete', item);\n    }\n  }, {\n    key: 'insertCard',\n    value: function insertCard(item, hoverIndex) {\n      var data = this.state.data;\n      data.splice(hoverIndex, 0, item);\n      this.saveData(item, hoverIndex, hoverIndex);\n    }\n  }, {\n    key: 'moveCard',\n    value: function moveCard(dragIndex, hoverIndex) {\n      var data = this.state.data;\n      var dragCard = data[dragIndex];\n      this.saveData(dragCard, dragIndex, hoverIndex);\n    }\n  }, {\n    key: 'cardPlaceHolder',\n    value: function cardPlaceHolder(dragIndex, hoverIndex) {// Dummy\n    }\n  }, {\n    key: 'saveData',\n    value: function saveData(dragCard, dragIndex, hoverIndex) {\n      var newData = (0, _immutabilityHelper2.default)(this.state, {\n        data: {\n          $splice: [[dragIndex, 1], [hoverIndex, 0, dragCard]]\n        }\n      });\n      this.setState(newData);\n\n      _store2.default.dispatch('updateOrder', newData.data);\n    }\n  }, {\n    key: 'getElement',\n    value: function getElement(item, index) {\n      var SortableFormElement = SortableFormElements[item.element];\n      return _react2.default.createElement(SortableFormElement, {\n        id: item.id,\n        index: index,\n        moveCard: this.moveCard,\n        insertCard: this.insertCard,\n        mutable: false,\n        parent: this.props.parent,\n        editModeOn: this.props.editModeOn,\n        isDraggable: true,\n        key: item.id,\n        sortData: item.id,\n        data: item,\n        _onDestroy: this._onDestroy\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var classes = this.props.className;\n\n      if (this.props.editMode) {\n        classes += ' is-editing';\n      }\n\n      var data = this.state.data.filter(function (x) {\n        return !!x;\n      });\n      var items = data.map(function (item, index) {\n        return _this3.getElement(item, index);\n      });\n      return _react2.default.createElement('div', {\n        className: classes\n      }, _react2.default.createElement('div', {\n        className: 'edit-form'\n      }, this.props.editElement !== null && _react2.default.createElement(_formElementsEdit2.default, {\n        showCorrectColumn: this.props.showCorrectColumn,\n        files: this.props.files,\n        manualEditModeOff: this.props.manualEditModeOff,\n        preview: this,\n        element: this.props.editElement,\n        updateElement: this.updateElement\n      })), _react2.default.createElement('div', {\n        className: 'Sortable'\n      }, items), _react2.default.createElement(PlaceHolder, {\n        id: 'form-place-holder',\n        show: items.length == 0,\n        index: items.length,\n        moveCard: this.cardPlaceHolder,\n        insertCard: this.insertCard\n      }));\n    }\n  }]);\n\n  return Preview;\n}(_react2.default.Component);\n\nexports.default = Preview;\nPreview.defaultProps = {\n  showCorrectColumn: false,\n  files: [],\n  editMode: false,\n  editElement: null,\n  className: 'react-form-builder-preview pull-left'\n};","map":null,"metadata":{},"sourceType":"script"}