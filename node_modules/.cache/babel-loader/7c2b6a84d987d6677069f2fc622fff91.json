{"ast":null,"code":"import _classCallCheck from \"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/src/components/formComponents/FormDesigner.js\";\nimport React, { Component } from 'react';\nimport loginForm from './loginForm';\nimport { FormEngine, Form } from \"react-json-form-engine\";\n\nvar FormDesigner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormDesigner, _Component);\n\n  function FormDesigner(props) {\n    var _this;\n\n    _classCallCheck(this, FormDesigner);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormDesigner).call(this, props));\n    _this.state = {\n      data: [],\n      formJson: loginForm\n    };\n    return _this;\n  }\n\n  _createClass(FormDesigner, [{\n    key: \"getFormEngine\",\n    value: function getFormEngine() {\n      return new FormEngine(this.state.formJson);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"The Form Designer\"), \"Available form models:\", React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, this.state.data.map(function (item) {\n        return React.createElement(\"li\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, item.name, \" \");\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Form, {\n        hideTitle: true,\n        submitButtonLabel: \"Login\",\n        instance: this.getFormEngine(),\n        onSubmit: function onSubmit() {//console.log(this.instance.getModelValues()); // Get form responses\n          //console.log(this.instance.serializeModel()); // Serialize form responses\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), \" \"));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:8080/getModelsByTypeId/2').then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        return _this2.setState({\n          data: data\n        });\n      });\n      this.setState(function (state, props) {\n        return {\n          formJson: {\n            \"sections\": [{\n              \"id\": \"section_0\",\n              \"title\": \"Strings\",\n              \"sortOrder\": 0,\n              \"subsections\": [{\n                \"id\": \"subsection_0\",\n                \"title\": \"Store String Values\",\n                \"subtitle\": \"Persists as \\\"[id]:[value:String]\\\" in the Model\",\n                \"sortOrder\": 0,\n                \"fields\": [{\n                  \"id\": \"str1\",\n                  \"type\": \"string\",\n                  \"title\": \"Text\",\n                  \"placeholder\": \"This is a placeholder\",\n                  \"sortOrder\": 0\n                }, {\n                  \"id\": \"str2\",\n                  \"type\": \"string\",\n                  \"title\": \"Password\",\n                  \"sortOrder\": 4\n                }, {\n                  \"id\": \"str3\",\n                  \"type\": \"string\",\n                  \"title\": \"Textarea\",\n                  \"placeholder\": \"Yet another placeholder\",\n                  \"sortOrder\": 1\n                }, {\n                  \"id\": \"str4\",\n                  \"type\": \"string\",\n                  \"title\": \"Select\",\n                  \"placeholder\": \"-- Select Something --\",\n                  \"options\": [{\n                    \"id\": \"pepsi\",\n                    \"title\": \"Pepsi\"\n                  }, {\n                    \"id\": \"coke\",\n                    \"title\": \"Coca-Cola\"\n                  }, {\n                    \"id\": \"orange\",\n                    \"title\": \"Orange Crush\"\n                  }],\n                  \"sortOrder\": 2\n                }, {\n                  \"id\": \"str5\",\n                  \"type\": \"string\",\n                  \"title\": \"Radio\",\n                  \"options\": [{\n                    \"title\": \"Pizza\",\n                    \"id\": \"pizza-is-good\"\n                  }, {\n                    \"title\": \"Cotton Candy\",\n                    \"id\": \"cotton-candy-is-sweet\"\n                  }, {\n                    \"title\": \"Pretzel\",\n                    \"id\": \"pretzels-are-salty\"\n                  }],\n                  \"sortOrder\": 3\n                }]\n              }]\n            }]\n          }\n        };\n      });\n    }\n  }]);\n\n  return FormDesigner;\n}(Component);\n\nexport default FormDesigner;","map":{"version":3,"sources":["/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/src/components/formComponents/FormDesigner.js"],"names":["React","Component","loginForm","FormEngine","Form","FormDesigner","props","state","data","formJson","map","item","id","name","getFormEngine","fetch","then","res","json","setState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport loginForm from './loginForm';\nimport { FormEngine, Form } from \"react-json-form-engine\";\n\n\n\nclass FormDesigner extends Component { \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      formJson: loginForm\n    };\n  }\n\n  getFormEngine() {\n    return new FormEngine(this.state.formJson);\n  };\n\n  render() {\n    return (<div className=\"App\">\n      <h1>The Form Designer</h1> \n      Available form models:\n      <ul>\n                {\n                    this.state.data.map((item) => {\n                       return <li key={item.id}>{item.name} </li>\n                    })\n                }\n            </ul>\n            <hr />\n            <center>\n            <Form\n                    hideTitle\n                    submitButtonLabel=\"Login\"\n                    instance={ this.getFormEngine() }\n                    onSubmit={() => {\n                    //console.log(this.instance.getModelValues()); // Get form responses\n                    //console.log(this.instance.serializeModel()); // Serialize form responses\n    }}\n  /> </center>\n      </div>);\n  }\n\n  componentDidMount() {\n\n    fetch('http://localhost:8080/getModelsByTypeId/2')\n    .then(res => res.json())\n    .then(data => this.setState({data}));    \n\n    this.setState((state, props) => ({\n      formJson: \n      {\n        \"sections\": [\n          {\n            \"id\": \"section_0\",\n            \"title\": \"Strings\",\n            \"sortOrder\": 0,\n            \"subsections\": [\n              {\n                \"id\": \"subsection_0\",\n                \"title\": \"Store String Values\",\n                \"subtitle\": \"Persists as \\\"[id]:[value:String]\\\" in the Model\",\n                \"sortOrder\": 0,\n                \"fields\": [\n                  {\n                    \"id\": \"str1\",\n                    \"type\": \"string\",\n                    \"title\": \"Text\",\n                    \"placeholder\": \"This is a placeholder\",\n                    \"sortOrder\": 0\n                  },\n                  {\n                    \"id\": \"str2\",\n                    \"type\": \"string\",\n                    \"title\": \"Password\",\n                    \"sortOrder\": 4\n                  },\n                  {\n                    \"id\": \"str3\",\n                    \"type\": \"string\",\n                    \"title\": \"Textarea\",\n                    \"placeholder\": \"Yet another placeholder\",\n                    \"sortOrder\": 1\n                  },\n                  {\n                    \"id\": \"str4\",\n                    \"type\": \"string\",\n                    \"title\": \"Select\",\n                    \"placeholder\": \"-- Select Something --\",\n                    \"options\": [\n                      {\n                        \"id\": \"pepsi\",\n                        \"title\": \"Pepsi\"\n                      },\n                      {\n                        \"id\": \"coke\",\n                        \"title\": \"Coca-Cola\"\n                      },\n                      {\n                        \"id\": \"orange\",\n                        \"title\": \"Orange Crush\"\n                      }\n                    ],\n                    \"sortOrder\": 2\n                  },\n                  {\n                    \"id\": \"str5\",\n                    \"type\": \"string\",\n                    \"title\": \"Radio\",\n                    \"options\": [\n                      {\n                        \"title\": \"Pizza\",\n                        \"id\": \"pizza-is-good\"\n                      },\n                      {\n                        \"title\": \"Cotton Candy\",\n                        \"id\": \"cotton-candy-is-sweet\"\n                      },\n                      {\n                        \"title\": \"Pretzel\",\n                        \"id\": \"pretzels-are-salty\"\n                      }\n                    ],\n                    \"sortOrder\": 3\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    }));\n      \n\n\n\n\n  }\n}\n\nexport default FormDesigner\n"]},"metadata":{},"sourceType":"module"}