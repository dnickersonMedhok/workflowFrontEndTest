{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isStorageAvailable = require('./is-storage-available');\n\nvar _isStorageAvailable2 = _interopRequireDefault(_isStorageAvailable);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _noop = function _noop() {};\n\nvar REACT_TABIFY_PREFIX = '__react-tabify__';\nvar STICKY_PREFIX = {\n  TAB: 'TAB__'\n};\nvar storage = void 0;\n\nif ((0, _isStorageAvailable2.default)()) {\n  storage = window.localStorage;\n} else {\n  storage = {\n    clear: _noop,\n    getItem: _noop,\n    key: _noop,\n    removeItem: _noop,\n    setItem: _noop\n  };\n  console.warn('LocalStorage not supported. Sticky settings will not work.');\n}\n\nvar LocalStorageService = {\n  setStickyTab: function setStickyTab(key, value) {\n    this.set(STICKY_PREFIX.TAB + key, value);\n  },\n  getStickyTab: function getStickyTab(key) {\n    return this.get(STICKY_PREFIX.TAB + key);\n  },\n  set: function set(key, value) {\n    try {\n      storage.setItem(REACT_TABIFY_PREFIX + key, JSON.stringify(value));\n    } catch (error) {\n      console.warn(error);\n    }\n  },\n  get: function get(key) {\n    var value = storage.getItem(REACT_TABIFY_PREFIX + key);\n\n    if (value) {\n      return JSON.parse(value);\n    }\n  }\n};\nexports.default = LocalStorageService;","map":null,"metadata":{},"sourceType":"script"}