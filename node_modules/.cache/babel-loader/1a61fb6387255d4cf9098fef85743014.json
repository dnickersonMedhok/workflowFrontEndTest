{"ast":null,"code":"import _classCallCheck from \"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/src/components/formComponents/FormDesigner.js\";\nimport React, { Component } from 'react';\nimport loginForm from './loginForm';\nimport { FormEngine, Form } from \"react-json-form-engine\";\n\nvar FormDesigner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormDesigner, _Component);\n\n  function FormDesigner(props) {\n    var _this;\n\n    _classCallCheck(this, FormDesigner);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormDesigner).call(this, props));\n    _this.state = {\n      data: [],\n      formJson: loginForm,\n      formInstance: null\n    };\n    return _this;\n  }\n\n  _createClass(FormDesigner, [{\n    key: \"setFormEngine\",\n    value: function setFormEngine() {\n      var _this2 = this;\n\n      this.setState(function (state, props) {\n        return {\n          formInstance: new FormEngine(_this2.state.formJson)\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"The Form Designer\"), \"Available form models:\", React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.state.data.map(function (item) {\n        return React.createElement(\"li\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, item.name, \" \");\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Form, {\n        hideTitle: true,\n        submitButtonLabel: \"Login\",\n        instance: this.state.formInstance,\n        onSubmit: function onSubmit() {\n          console.log(_this3.state.formInstance.getModelValues()); // Get form responses\n\n          console.log(_this3.state.formInstance.serializeModel()); // Serialize form responses\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), \" \"));\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      //TODO: get this from the DB \n      this.setState(function (state, props) {\n        return {\n          formJson: {\n            \"id\": \"section_title\",\n            \"title\": \"Booleans\",\n            \"sections\": [{\n              \"id\": \"section_0\",\n              \"title\": \"Booleans\",\n              \"subsections\": [{\n                \"id\": \"subsection_0\",\n                \"title\": \"Store Boolean Values\",\n                \"subtitle\": \"Persists as \\\"[id]:[value:Boolean]\\\" in the Model\",\n                \"fields\": [{\n                  \"id\": \"bool1\",\n                  \"type\": \"boolean\",\n                  \"title\": \"Checkbox\"\n                }, {\n                  \"id\": \"bool2\",\n                  \"type\": \"boolean\",\n                  \"title\": \"Radio (Inline)\",\n                  \"inline\": true,\n                  \"options\": [{\n                    \"title\": \"Sure!\"\n                  }, {\n                    \"title\": \"No Way!\"\n                  }]\n                }, {\n                  \"id\": \"bool3\",\n                  \"type\": \"boolean\",\n                  \"title\": \"Radio (Block)\",\n                  \"inline\": false,\n                  \"options\": [{\n                    \"title\": \"Yes\"\n                  }, {\n                    \"title\": \"No\"\n                  }]\n                }]\n              }]\n            }]\n          }\n        };\n      });\n      this.setFormEngine();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      fetch('http://localhost:8080/getModelsByTypeId/2').then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        return _this4.setState({\n          data: data\n        });\n      });\n      this.setFormEngine();\n    }\n  }]);\n\n  return FormDesigner;\n}(Component);\n\nexport default FormDesigner;","map":{"version":3,"sources":["/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/src/components/formComponents/FormDesigner.js"],"names":["React","Component","loginForm","FormEngine","Form","FormDesigner","props","state","data","formJson","formInstance","setState","map","item","id","name","console","log","getModelValues","serializeModel","setFormEngine","fetch","then","res","json"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport loginForm from './loginForm';\nimport { FormEngine, Form } from \"react-json-form-engine\";\n\n\n\nclass FormDesigner extends Component { \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      formJson: loginForm,\n      formInstance: null\n    };\n  }\n\n  setFormEngine() {\n    this.setState((state, props) => ({\n      formInstance: new FormEngine(this.state.formJson)\n    }));\n  }\n\n  render() {\n    return (<div className=\"App\">\n      <h1>The Form Designer</h1> \n      Available form models:\n      <ul>\n                {\n                    this.state.data.map((item) => {\n                       return <li key={item.id}>{item.name} </li>\n                    })\n                }\n            </ul>\n            <hr />\n            <center>\n            <Form\n                    hideTitle\n                    submitButtonLabel=\"Login\"\n                    instance={ this.state.formInstance }\n                    onSubmit={() => {\n                    console.log(this.state.formInstance.getModelValues()); // Get form responses\n                    console.log(this.state.formInstance.serializeModel()); // Serialize form responses\n    }}\n  /> </center>\n      </div>);\n  }\n\n  componentWillMount() {\n//TODO: get this from the DB \n    this.setState((state, props) => ({\n      formJson: {\n        \"id\": \"section_title\",\n        \"title\": \"Booleans\",\n        \"sections\": [\n          {\n            \"id\": \"section_0\",\n            \"title\": \"Booleans\",\n            \"subsections\": [\n              {\n                \"id\": \"subsection_0\",\n                \"title\": \"Store Boolean Values\",\n                \"subtitle\": \"Persists as \\\"[id]:[value:Boolean]\\\" in the Model\",\n                \"fields\": [\n                  {\n                    \"id\": \"bool1\",\n                    \"type\": \"boolean\",\n                    \"title\": \"Checkbox\"\n                  },\n                  {\n                    \"id\": \"bool2\",\n                    \"type\": \"boolean\",\n                    \"title\": \"Radio (Inline)\",\n                    \"inline\": true,\n                    \"options\": [\n                      {\n                        \"title\": \"Sure!\"\n                      },\n                      {\n                        \"title\": \"No Way!\"\n                      }\n                    ]\n                  },\n                  {\n                    \"id\": \"bool3\",\n                    \"type\": \"boolean\",\n                    \"title\": \"Radio (Block)\",\n                    \"inline\": false,\n                    \"options\": [\n                      {\n                        \"title\": \"Yes\"\n                      },\n                      {\n                        \"title\": \"No\"\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n      \n\n\n      \n  }));\n    this.setFormEngine();\n  }\n\n  componentDidMount() {\n\n    fetch('http://localhost:8080/getModelsByTypeId/2')\n    .then(res => res.json())\n    .then(data => this.setState({data})); \n    this.setFormEngine();\n   \n  }\n}\n\nexport default FormDesigner\n"]},"metadata":{},"sourceType":"module"}