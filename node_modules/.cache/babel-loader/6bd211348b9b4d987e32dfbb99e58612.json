{"ast":null,"code":"var _classCallCheck = require(\"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/node_modules/@babel/runtime/helpers/createClass\");\n\n!function (t, n) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = n() : \"function\" == typeof define && define.amd ? define(n) : t.beedle = n();\n}(this, function () {\n  \"use strict\";\n\n  var t =\n  /*#__PURE__*/\n  function () {\n    function t(_t) {\n      _classCallCheck(this, t);\n\n      var n = this;\n      n.actions = {}, n.mutations = {}, n.state = {}, n.status = \"resting\", n.callbacks = [], _t.hasOwnProperty(\"actions\") && (n.actions = _t.actions), _t.hasOwnProperty(\"mutations\") && (n.mutations = _t.mutations), n.state = new Proxy(_t.initialState || {}, {\n        set: function set(t, o, s) {\n          return t[o] = s, n.processCallbacks(n.state), n.status = \"resting\", !0;\n        }\n      });\n    }\n\n    _createClass(t, [{\n      key: \"dispatch\",\n      value: function dispatch(t, n) {\n        var o = this;\n        return \"function\" != typeof o.actions[t] ? (console.error(\"Action \\\"\".concat(t, \"\\\" doesn't exist.\")), !1) : (o.status = \"action\", o.actions[t](o, n), !0);\n      }\n    }, {\n      key: \"commit\",\n      value: function commit(t, n) {\n        var o = this;\n        if (\"function\" != typeof o.mutations[t]) return console.log(\"Mutation \\\"\".concat(t, \"\\\" doesn't exist\")), !1;\n        o.status = \"mutation\";\n        var s = o.mutations[t](o.state, n);\n        return o.state = Object.assign(o.state, s), !0;\n      }\n    }, {\n      key: \"processCallbacks\",\n      value: function processCallbacks(t) {\n        var n = this;\n        return !!n.callbacks.length && (n.callbacks.forEach(function (n) {\n          return n(t);\n        }), !0);\n      }\n    }, {\n      key: \"subscribe\",\n      value: function subscribe(t) {\n        var n = this;\n        return \"function\" != typeof t ? (console.error(\"You can only subscribe to Store changes with a valid function\"), !1) : (n.callbacks.push(t), !0);\n      }\n    }]);\n\n    return t;\n  }();\n\n  return t;\n});","map":null,"metadata":{},"sourceType":"script"}