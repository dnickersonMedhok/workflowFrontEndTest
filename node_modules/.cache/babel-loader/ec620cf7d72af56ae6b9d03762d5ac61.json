{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Dropdown = exports.dropdownFactory = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _classnames4 = require('classnames');\n\nvar _classnames5 = _interopRequireDefault(_classnames4);\n\nvar _reactCssThemr = require('react-css-themr');\n\nvar _identifiers = require('../identifiers');\n\nvar _Input = require('../input/Input');\n\nvar _Input2 = _interopRequireDefault(_Input);\n\nvar _events = require('../utils/events');\n\nvar _events2 = _interopRequireDefault(_events);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint-disable */\n\n\nvar factory = function factory(Input) {\n  var Dropdown = function (_Component) {\n    _inherits(Dropdown, _Component);\n\n    function Dropdown() {\n      var _ref;\n\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, Dropdown);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Dropdown.__proto__ || Object.getPrototypeOf(Dropdown)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n        active: false,\n        up: false\n      }, _this.getDocumentEvents = function () {\n        return {\n          click: _this.handleDocumentClick,\n          touchend: _this.handleDocumentClick\n        };\n      }, _this.getSelectedItem = function () {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _this.props.source[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n            if (item[_this.props.valueKey] === _this.props.value) return item;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return !_this.props.allowBlank ? _this.props.source[0] : undefined;\n      }, _this.handleSelect = function (item, event) {\n        if (_this.props.onBlur) _this.props.onBlur(event);\n\n        if (!_this.props.disabled && _this.props.onChange) {\n          if (_this.props.name) event.target.name = _this.props.name;\n\n          _this.props.onChange(item, event);\n\n          _this.close();\n        }\n      }, _this.handleClick = function (event) {\n        _this.open(event);\n\n        _events2.default.pauseEvent(event);\n\n        if (_this.props.onClick) _this.props.onClick(event);\n      }, _this.handleDocumentClick = function (event) {\n        if (_this.state.active && !_events2.default.targetIsDescendant(event, _reactDom2.default.findDOMNode(_this))) {\n          _this.setState({\n            active: false\n          });\n        }\n      }, _this.close = function () {\n        if (_this.state.active) {\n          _this.setState({\n            active: false\n          });\n        }\n      }, _this.open = function (event) {\n        if (_this.state.active) return;\n        var client = event.target.getBoundingClientRect();\n        var screenHeight = window.innerHeight || document.documentElement.offsetHeight;\n        var up = _this.props.auto ? client.top > screenHeight / 2 + client.height : false;\n\n        _this.setState({\n          active: true,\n          up: up\n        });\n      }, _this.handleFocus = function (event) {\n        event.stopPropagation();\n        if (!_this.props.disabled) _this.open(event);\n        if (_this.props.onFocus) _this.props.onFocus(event);\n      }, _this.handleBlur = function (event) {\n        event.stopPropagation();\n        if (_this.state.active) _this.close();\n        if (_this.props.onBlur) _this.props.onBlur(event);\n      }, _this.renderValue = function (item, idx) {\n        var _classnames;\n\n        var _this$props = _this.props,\n            labelKey = _this$props.labelKey,\n            theme = _this$props.theme,\n            valueKey = _this$props.valueKey;\n        var className = (0, _classnames5.default)((_classnames = {}, _defineProperty(_classnames, theme.selected, item[valueKey] === _this.props.value), _defineProperty(_classnames, theme.disabled, item.disabled), _classnames));\n        return _react2.default.createElement('li', {\n          key: idx,\n          className: className,\n          onMouseDown: !item.disabled && _this.handleSelect.bind(_this, item[valueKey])\n        }, _this.props.template ? _this.props.template(item) : item[labelKey]);\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(Dropdown, [{\n      key: 'componentWillUpdate',\n      value: function componentWillUpdate(nextProps, nextState) {\n        if (!this.state.active && nextState.active) {\n          _events2.default.addEventsToDocument(this.getDocumentEvents());\n        }\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate(prevProps, prevState) {\n        if (prevState.active && !this.state.active) {\n          _events2.default.removeEventsFromDocument(this.getDocumentEvents());\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        if (this.state.active) {\n          _events2.default.removeEventsFromDocument(this.getDocumentEvents());\n        }\n      }\n    }, {\n      key: 'renderTemplateValue',\n      value: function renderTemplateValue(selected) {\n        var _classnames2;\n\n        var theme = this.props.theme;\n        var className = (0, _classnames5.default)(theme.field, (_classnames2 = {}, _defineProperty(_classnames2, theme.errored, this.props.error), _defineProperty(_classnames2, theme.disabled, this.props.disabled), _defineProperty(_classnames2, theme.required, this.props.required), _classnames2));\n        return _react2.default.createElement('div', {\n          className: className,\n          onClick: this.handleClick\n        }, _react2.default.createElement('div', {\n          className: theme.templateValue + ' ' + theme.value\n        }, this.props.template(selected)), this.props.label ? _react2.default.createElement('label', {\n          className: theme.label\n        }, this.props.label, this.props.required ? _react2.default.createElement('span', {\n          className: theme.required\n        }, ' * ') : null) : null, this.props.error ? _react2.default.createElement('span', {\n          className: theme.error\n        }, this.props.error) : null);\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _classnames3;\n\n        var _props = this.props,\n            allowBlank = _props.allowBlank,\n            auto = _props.auto,\n            labelKey = _props.labelKey,\n            required = _props.required,\n            onChange = _props.onChange,\n            onFocus = _props.onFocus,\n            onBlur = _props.onBlur,\n            source = _props.source,\n            template = _props.template,\n            theme = _props.theme,\n            valueKey = _props.valueKey,\n            others = _objectWithoutProperties(_props, ['allowBlank', 'auto', 'labelKey', 'required', 'onChange', 'onFocus', 'onBlur', 'source', 'template', 'theme', 'valueKey']);\n\n        var selected = this.getSelectedItem();\n        var className = (0, _classnames5.default)(theme.dropdown, (_classnames3 = {}, _defineProperty(_classnames3, theme.up, this.state.up), _defineProperty(_classnames3, theme.active, this.state.active), _defineProperty(_classnames3, theme.disabled, this.props.disabled), _defineProperty(_classnames3, theme.required, this.props.required), _classnames3), this.props.className);\n        return _react2.default.createElement('div', {\n          className: className,\n          'data-react-toolbox': 'dropdown',\n          onBlur: this.handleBlur,\n          onFocus: this.handleFocus,\n          tabIndex: '-1'\n        }, _react2.default.createElement(Input, _extends({}, others, {\n          tabIndex: '0',\n          className: theme.value,\n          onClick: this.handleClick,\n          required: this.props.required,\n          readOnly: true,\n          type: template && selected ? 'hidden' : null,\n          theme: theme,\n          themeNamespace: 'input',\n          value: selected && selected[labelKey] ? selected[labelKey] : ''\n        })), template && selected ? this.renderTemplateValue(selected) : null, _react2.default.createElement('ul', {\n          className: theme.values\n        }, source.map(this.renderValue)));\n      }\n    }]);\n\n    return Dropdown;\n  }(_react.Component);\n\n  Dropdown.propTypes = {\n    allowBlank: _propTypes2.default.bool,\n    auto: _propTypes2.default.bool,\n    className: _propTypes2.default.string,\n    disabled: _propTypes2.default.bool,\n    error: _propTypes2.default.string,\n    label: _propTypes2.default.string,\n    labelKey: _propTypes2.default.string,\n    name: _propTypes2.default.string,\n    onBlur: _propTypes2.default.func,\n    onChange: _propTypes2.default.func,\n    onClick: _propTypes2.default.func,\n    onFocus: _propTypes2.default.func,\n    required: _propTypes2.default.bool,\n    source: _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object])).isRequired,\n    template: _propTypes2.default.func,\n    theme: _propTypes2.default.shape({\n      active: _propTypes2.default.string,\n      disabled: _propTypes2.default.string,\n      dropdown: _propTypes2.default.string,\n      error: _propTypes2.default.string,\n      errored: _propTypes2.default.string,\n      field: _propTypes2.default.string,\n      label: _propTypes2.default.string,\n      required: _propTypes2.default.string,\n      selected: _propTypes2.default.string,\n      templateValue: _propTypes2.default.string,\n      up: _propTypes2.default.string,\n      value: _propTypes2.default.string,\n      values: _propTypes2.default.string\n    }),\n    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n    valueKey: _propTypes2.default.string\n  };\n  Dropdown.defaultProps = {\n    auto: true,\n    className: '',\n    allowBlank: true,\n    disabled: false,\n    labelKey: 'label',\n    required: false,\n    valueKey: 'value'\n  };\n  return Dropdown;\n};\n\nvar Dropdown = factory(_Input2.default);\nexports.default = (0, _reactCssThemr.themr)(_identifiers.DROPDOWN)(Dropdown);\nexports.dropdownFactory = factory;\nexports.Dropdown = Dropdown;","map":null,"metadata":{},"sourceType":"script"}