{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _isEmpty2 = require('lodash/isEmpty');\n\nvar _isEmpty3 = _interopRequireDefault(_isEmpty2);\n\nvar _reactTabify = require('react-tabify');\n\nvar _Asterisk = require('../common/Asterisk');\n\nvar _Asterisk2 = _interopRequireDefault(_Asterisk);\n\nvar _FormSubmitButton = require('./helpers/FormSubmitButton');\n\nvar _FormSubmitButton2 = _interopRequireDefault(_FormSubmitButton);\n\nvar _ValidationAPIError = require('./validation/ValidationAPIError');\n\nvar _ValidationAPIError2 = _interopRequireDefault(_ValidationAPIError);\n\nvar _FormSection = require('./FormSection');\n\nvar _FormSection2 = _interopRequireDefault(_FormSection);\n\nvar _FormTitle = require('./helpers/FormTitle');\n\nvar _FormTitle2 = _interopRequireDefault(_FormTitle);\n\nvar _common = require('../common');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Form = function (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  function Form(props) {\n    _classCallCheck(this, Form);\n\n    var _this = _possibleConstructorReturn(this, (Form.__proto__ || Object.getPrototypeOf(Form)).call(this, props));\n\n    _this.onUpdate = _this.onUpdate.bind(_this);\n    _this._renderSectionTabPane = _this._renderSectionTabPane.bind(_this);\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var instance = this.props.instance;\n\n      if (instance.isValid()) {\n        instance.validate();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var instance = this.props.instance; // No instance\n\n      if (!instance || (0, _isEmpty3.default)(instance)) {\n        return _react2.default.createElement('em', {\n          className: 'has-text-danger'\n        }, 'No form instance');\n      } // Invalid definition\n\n\n      if (!instance.isValid()) {\n        return _react2.default.createElement(_ValidationAPIError2.default, {\n          error: instance.error\n        });\n      } // No sections\n\n\n      if (instance.getSections().isEmpty()) {\n        return _react2.default.createElement('em', {\n          className: 'has-text-danger'\n        }, 'No sections');\n      }\n\n      return _react2.default.createElement(_common.Flex, {\n        width: this.props.width || 500,\n        id: 'form-' + instance.getId(),\n        column: true,\n        flex: 1,\n        flexShrink: 0,\n        border: '1px solid #dbdbdb',\n        overflow: 'auto'\n      }, this._renderFormTitle(instance), this._renderForm(instance.getSections()));\n    }\n  }, {\n    key: '_renderFormTitle',\n    value: function _renderFormTitle(instance) {\n      if (!this.props.hideTitle) {\n        return _react2.default.createElement(_FormTitle2.default, {\n          id: 'form-title-' + instance.getId(),\n          iconPrefix: instance.getFormIconPrefix(),\n          icon: instance.getFormIcon(),\n          label: instance.getFormTitle(),\n          controlsRight: this._renderSubmitButton()\n        });\n      }\n    }\n  }, {\n    key: '_renderForm',\n    value: function _renderForm(sections) {\n      return sections.count() > 1 ? this._renderTabbedSections(sections) : this._renderSingleSection(sections.values()[0]);\n    }\n  }, {\n    key: '_renderTabbedSections',\n    value: function _renderTabbedSections(sections) {\n      return _react2.default.createElement(_reactTabify.Tabs, {\n        stacked: true,\n        id: 'form-tabs-' + this.props.instance.getId(),\n        defaultActiveKey: 0\n      }, this._renderSectionContent(sections));\n    }\n  }, {\n    key: '_renderSectionContent',\n    value: function _renderSectionContent(sections) {\n      return sections.values().map(this._renderSectionTabPane);\n    }\n  }, {\n    key: '_renderSectionTabPane',\n    value: function _renderSectionTabPane(section, index) {\n      return _react2.default.createElement(_reactTabify.Tab, {\n        key: index,\n        eventKey: index,\n        label: this._getDerivedSectionTitle(section)\n      }, this._renderSingleSection(section));\n    }\n  }, {\n    key: '_renderSingleSection',\n    value: function _renderSingleSection(section) {\n      return _react2.default.createElement(_FormSection2.default, {\n        section: section,\n        instance: this.props.instance,\n        onUpdate: this.onUpdate,\n        hideTitle: this.props.hideSectionTitles,\n        hideSubtitle: this.props.hideSubsectionTitles,\n        submitButton: this.props.hideTitle ? this._renderSubmitButton() : null\n      });\n    }\n  }, {\n    key: '_getDerivedSectionTitle',\n    value: function _getDerivedSectionTitle(section) {\n      var label = section.title;\n\n      if (this.props.instance.sectionHasError(section)) {\n        label = _react2.default.createElement('span', null, label, ' ', _react2.default.createElement(_Asterisk2.default, null));\n      }\n\n      return label;\n    }\n  }, {\n    key: '_renderSubmitButton',\n    value: function _renderSubmitButton() {\n      return _react2.default.createElement(_FormSubmitButton2.default, {\n        onSubmit: this.props.onSubmit,\n        label: this.props.submitButtonLabel\n      });\n    }\n  }, {\n    key: 'onUpdate',\n    value: function onUpdate(event, id) {\n      var _props = this.props,\n          instance = _props.instance,\n          onUpdate = _props.onUpdate;\n      id = id || event.target.id;\n      var field = instance.getField(id);\n      var value = field.actions.onUpdate(event, field, instance.getModelValue(id));\n      instance.setModelValue(id, value, field); // Set model value\n\n      if (instance.isLiveValidation()) {\n        instance.validate(); // Validate the form\n      }\n\n      if (!onUpdate) {\n        this.forceUpdate();\n      } else {\n        onUpdate({\n          id: id,\n          value: value\n        }); // Notify parent\n      }\n    }\n  }]);\n\n  return Form;\n}(_react2.default.Component);\n\nForm.propTypes = {\n  instance: _propTypes2.default.object.isRequired,\n  submitButtonLabel: _propTypes2.default.string,\n  hideTitle: _propTypes2.default.bool,\n  hideSectionTitles: _propTypes2.default.bool,\n  hideSubsectionTitles: _propTypes2.default.bool,\n  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  onSubmit: _propTypes2.default.func.isRequired,\n  onUpdate: _propTypes2.default.func\n};\nexports.default = Form;","map":null,"metadata":{},"sourceType":"script"}