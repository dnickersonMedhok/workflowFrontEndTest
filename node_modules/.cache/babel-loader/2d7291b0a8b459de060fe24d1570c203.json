{"ast":null,"code":"import _classCallCheck from \"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/src/components/entityComponents/EntityDesigner.js\";\nimport React, { Component } from 'react';\nimport { apiUrl } from '../../resources/apiUrl';\nimport { Button, Form, FormGroup, FormControl, ControlLabel } from 'react-bootstrap';\n\nvar EntityDesigner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EntityDesigner, _Component);\n\n  function EntityDesigner(props) {\n    var _this;\n\n    _classCallCheck(this, EntityDesigner);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EntityDesigner).call(this, props));\n    _this.state = {\n      data: [],\n      inputs: ['input-0']\n    };\n    return _this;\n  }\n\n  _createClass(EntityDesigner, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"The Entity Designer\")), \"Available entity models:\", React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, this.state.data.map(function (item, key) {\n        return React.createElement(\"li\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, item.name, \" \");\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Form, {\n        class: \"form-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"New entity: Add fields\"), this.state.inputs.map(function (item, key) {\n        return React.createElement(FormControl, {\n          class: \"form-control\",\n          type: \"text\",\n          name: item,\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        });\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.appendInput();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Add Field\")))));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      fetch(apiUrl.url.concat('getModelsByTypeId/1')).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        return _this3.setState({\n          data: data\n        });\n      });\n    }\n  }, {\n    key: \"appendInput\",\n    value: function appendInput() {\n      var newInput = \"input-\".concat(this.state.inputs.length);\n      this.setState({\n        inputs: this.state.inputs.concat([newInput])\n      });\n    }\n  }]);\n\n  return EntityDesigner;\n}(Component);\n\nexport default EntityDesigner;","map":{"version":3,"sources":["/home/dnickerson/workspaces/workflow-test/wfGit/workflowFrontEndTest/src/components/entityComponents/EntityDesigner.js"],"names":["React","Component","apiUrl","Button","Form","FormGroup","FormControl","ControlLabel","EntityDesigner","props","state","data","inputs","map","item","key","name","appendInput","fetch","url","concat","then","res","json","setState","newInput","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,WAAlC,EAA+CC,YAA/C,QAAmE,iBAAnE;;IAEMC,c;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,MAAM,EAAE,CAAC,SAAD;AAFG,KAAb;AAHiB;AAOlB;;;;6BAEQ;AAAA;;AACP,aAAQ;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,KAAK,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAJ,CADM,8BAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,GAAhB,CAAoB,UAACC,IAAD,EAAOC,GAAP,EAAe;AACjC,eAAO;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAeD,IAAI,CAACE,IAApB,MAAP;AACD,OAFD,CAFJ,CAHM,EAUN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVM,EAWN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEG,KAAKN,KAAL,CAAWE,MAAX,CAAkBC,GAAlB,CAAsB,UAACC,IAAD,EAAOC,GAAP,EAAe;AACpC,eAAO,oBAAC,WAAD;AAAa,UAAA,KAAK,EAAC,cAAnB;AAAkC,UAAA,IAAI,EAAC,MAAvC;AAA8C,UAAA,IAAI,EAAED,IAApD;AAA0D,UAAA,GAAG,EAAEC,GAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACC,OAFF,CAFH,EAKO,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAG;AAAA,iBAAM,MAAI,CAACE,WAAL,EAAN;AAAA,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALP,CADF,CADA,CAXM,CAAR;AA0BD;;;wCAEmB;AAAA;;AAClBC,MAAAA,KAAK,CAAChB,MAAM,CAACiB,GAAP,CAAWC,MAAX,CAAkB,qBAAlB,CAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADT,EAECF,IAFD,CAEM,UAAAV,IAAI;AAAA,eAAI,MAAI,CAACa,QAAL,CAAc;AAACb,UAAAA,IAAI,EAAJA;AAAD,SAAd,CAAJ;AAAA,OAFV;AAGD;;;kCAEa;AACZ,UAAIc,QAAQ,mBAAY,KAAKf,KAAL,CAAWE,MAAX,CAAkBc,MAA9B,CAAZ;AACA,WAAKF,QAAL,CAAc;AAAEZ,QAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MAAX,CAAkBQ,MAAlB,CAAyB,CAACK,QAAD,CAAzB;AAAV,OAAd;AACH;;;;EAhD4BxB,S;;AAmD7B,eAAeO,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport { apiUrl } from '../../resources/apiUrl';\nimport { Button, Form, FormGroup, FormControl, ControlLabel } from 'react-bootstrap';\n\nclass EntityDesigner extends Component { \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      inputs: ['input-0']\n    };\n  }\n\n  render() {\n    return (<div className=\"App\" class=\"form-group\">\n      <h5><b>The Entity Designer</b></h5> \n      Available entity models:\n      <ul>\n        {\n          this.state.data.map((item, key) => {\n            return <li key={key}>{item.name} </li>\n          })\n        }\n      </ul>\n      <hr/>\n      <center>\n      <Form class=\"form-inline\">\n        <FormGroup controlId=\"formBasicText\">\n          <ControlLabel>New entity: Add fields</ControlLabel>\n          {this.state.inputs.map((item, key) => {\n            return <FormControl class=\"form-control\" type=\"text\" name={item} key={key}/>;\n            })}\n               <Button onClick={ () => this.appendInput() }>\n                   Add Field\n               </Button>\n        </FormGroup>\n      </Form>\n      </center>\n          \n      </div>);\n  }\n\n  componentDidMount() {\n    fetch(apiUrl.url.concat('getModelsByTypeId/1'))\n    .then(res => res.json())\n    .then(data => this.setState({data}));\n  }\n\n  appendInput() {\n    var newInput = `input-${this.state.inputs.length}`;\n    this.setState({ inputs: this.state.inputs.concat([newInput]) });\n}\n}\n\nexport default EntityDesigner\n"]},"metadata":{},"sourceType":"module"}